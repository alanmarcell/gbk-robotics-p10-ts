{"version":3,"sources":["../dist-esnext/index.js"],"names":["board","Board","on","led","Led","temperature","Temperature","pin","controller","toCelsius","raw","data","console","log","C","off"],"mappings":";;AAEA;;;;;;AACA;AACA;AACA,IAAIA,QAAQ,IAAI,qBAAKC,KAAT,EAAZ;AACA;AACA;AAPA;AACA;AAOAD,MAAME,EAAN,CAAS,OAAT,EAAkB,YAAY;AAC1B,QAAIC,MAAM,IAAI,qBAAKC,GAAT,CAAa,EAAb,CAAV;AACA,QAAIC,cAAc,IAAI,qBAAKC,WAAT,CAAqB;AACnCC,aAAK,CAD8B;AAEnCC,oBAAY,QAFuB;AAGnCC,mBAAW;AAAA,mBAAOC,MAAM,aAAb;AAAA;AAHwB,KAArB,CAAlB;AAKAL,gBAAYH,EAAZ,CAAe,MAAf,EAAuB,UAACS,IAAD,EAAU;AAC7BC,gBAAQC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,YAAIA,KAAKG,CAAL,GAAS,EAAb,EAAiB;AACbX,gBAAID,EAAJ;AACH,SAFD,MAGK;AACDC,gBAAIY,GAAJ;AACH;AACJ,KARD;AASH,CAhBD;AAiBA","file":"index.js","sourcesContent":["// Como o johnny five é um módulo Node.js, \r\n// ele é carregado como qualquer outro\r\nimport five from 'johnny-five';\r\n// Instanciamos uma placa, que neste caso \r\n// será a do Arduino que se comunicará com o computador \r\nvar board = new five.Board();\r\n// O evento de ready é disparado quando a comunicação \r\n// é estabelecida entre o processo Node.js e o Arduino \r\nboard.on('ready', function () {\r\n    var led = new five.Led(13);\r\n    var temperature = new five.Temperature({\r\n        pin: 0,\r\n        controller: 'ANALOG',\r\n        toCelsius: raw => raw / 20.2325581395,\r\n    });\r\n    temperature.on('data', (data) => {\r\n        console.log('===>', data);\r\n        if (data.C > 30) {\r\n            led.on();\r\n        }\r\n        else {\r\n            led.off();\r\n        }\r\n    });\r\n});\r\n//# sourceMappingURL=index.js.map"]}